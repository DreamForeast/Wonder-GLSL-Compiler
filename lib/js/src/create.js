// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var Glob = require("glob");
var Parse = require("./parse.js");
var ArraySystem = require("./ArraySystem.js");

var _functionContent = "\n  open ShaderChunkType;\n\n  open StateDataMainType;\n\n  let _getGLSLChunkMap = ({chunkMap}) => chunkMap;\n\n  let getChunk = (name: string, glslChunkRecord) =>\n    glslChunkRecord\n    |> _getGLSLChunkMap\n    |> WonderCommonlib.MutableHashMapService.get(name)\n    |> Js.Option.getExn;\n\n  let _buildChunk =\n      (\n        (top: string, define: string),\n        varDeclare: string,\n        (funcDeclare: string, funcDefine: string),\n        body: string\n      ) => {\n    top,\n    define,\n    varDeclare,\n    funcDeclare,\n    funcDefine,\n    body\n  };\n\n  let create = () =>\n  ";

function _buildInitDataContent(glslContent) {
  return "\n    WonderCommonlib.MutableHashMapService.{\n      chunkMap:\n        createEmpty()\n        " + (String(glslContent) + "\n    };\n  ");
}

function _buildShunkSystemFileContent(glslContent) {
  return _functionContent + _buildInitDataContent(glslContent);
}

function _writeToShunkSystemFile(destFilePath, doneFunc, content) {
  Fs.writeFileSync(destFilePath, content, "utf8");
  doneFunc();
  return /* () */0;
}

function _convertArrayToList(array) {
  return array.reduce((function (list, str) {
                return /* :: */[
                        str,
                        list
                      ];
              }), /* [] */0);
}

function createShunkSystemFile(glslPathArr, destFilePath, doneFunc) {
  var glslContent = Parse.parseImport(List.map((function (actualGlslPath) {
              return Parse.parseSegment(actualGlslPath, Fs.readFileSync(actualGlslPath, "utf8"));
            }), _convertArrayToList(ArraySystem.flatten(glslPathArr.map((function (glslPath) {
                          return Glob.sync(glslPath);
                        }))))));
  return _writeToShunkSystemFile(destFilePath, doneFunc, _functionContent + _buildInitDataContent(glslContent));
}

exports._functionContent = _functionContent;
exports._buildInitDataContent = _buildInitDataContent;
exports._buildShunkSystemFileContent = _buildShunkSystemFileContent;
exports._writeToShunkSystemFile = _writeToShunkSystemFile;
exports._convertArrayToList = _convertArrayToList;
exports.createShunkSystemFile = createShunkSystemFile;
/* fs Not a pure module */
